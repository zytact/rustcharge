name: Build and Release

on:
    push:
        branches:
            - main
        paths:
            - '**.rs'
            - 'Cargo.toml'
            - 'Cargo.lock'

jobs:
    build:
        name: Build ${{ matrix.target }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      artifact_name: rustcharge
                      asset_name: rustcharge-linux-amd64
                    - os: macos-latest
                      target: x86_64-apple-darwin
                      artifact_name: rustcharge
                      asset_name: rustcharge-macos-amd64
                    - os: macos-latest
                      target: aarch64-apple-darwin
                      artifact_name: rustcharge
                      asset_name: rustcharge-macos-arm64
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
                      artifact_name: rustcharge.exe
                      asset_name: rustcharge-windows-amd64.exe

        steps:
            - uses: actions/checkout@v3

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  target: ${{ matrix.target }}
                  profile: minimal
                  override: true

            - name: Build
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --release --target ${{ matrix.target }}

            - name: Prepare artifacts
              shell: bash
              run: |
                  mkdir -p dist
                  if [ "${{ matrix.os }}" = "windows-latest" ]; then
                    cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} dist/${{ matrix.asset_name }}
                  else
                    cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} dist/${{ matrix.asset_name }}
                    chmod +x dist/${{ matrix.asset_name }}
                  fi

            - name: Upload artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ matrix.asset_name }}
                  path: dist/${{ matrix.asset_name }}

    release:
        name: Create Release
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Download artifacts
              uses: actions/download-artifact@v3
              with:
                  path: ./artifacts

            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v1
              with:
                  files: ./artifacts/**/*
                  draft: false
                  prerelease: false
                  generate_release_notes: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
